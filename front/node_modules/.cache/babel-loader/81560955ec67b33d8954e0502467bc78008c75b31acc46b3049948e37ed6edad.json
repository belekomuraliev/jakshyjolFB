{"ast":null,"code":"var _jsxFileName = \"C:\\\\Python\\\\jacshyjolFB\\\\front\\\\src\\\\pages\\\\TestPage\\\\TestPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DrivingTestModule from \"../../modules/driving-test/TestingWindow\";\nimport CountDown from \"../../components/timer\";\nimport ResultPage from \"../ResultPage/ResultPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TestPage = () => {\n  _s();\n  const [timerInfo, setTimerInfo] = useState({\n    isOver: false,\n    finishTime: ''\n  });\n  const [resultInfo, setResultInfo] = useState({\n    errors: 0,\n    correctAnswers: 0,\n    totalQuestionsNumbers: 0\n  });\n  const [isFinishedTest, setIsFinishedTest] = useState(false);\n  const handleGetTimerInfo = info => {\n    setTimerInfo(info);\n  };\n  const handleFinishTest = resultInfo => {\n    setResultInfo(resultInfo);\n    setIsFinishedTest(true);\n  };\n  const handleChangeTest = resultInfo => {\n    setResultInfo(resultInfo);\n  };\n  const handleResetTest = () => {\n    setIsFinishedTest(false);\n    setTimerInfo({\n      isOver: false,\n      finishTime: ''\n    });\n    setResultInfo({\n      errors: 0,\n      correctAnswers: 0,\n      totalQuestionsNumbers: 0\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: timerInfo.isOver ? /*#__PURE__*/_jsxDEV(ResultPage, {\n      onResetTest: handleResetTest,\n      countError: resultInfo.errors,\n      correctAnswers: resultInfo.correctAnswers,\n      totalQuestionsNumber: resultInfo.totalQuestionsNumbers,\n      finishTime: timerInfo.finishTime,\n      timerInfo: timerInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CountDown, {\n        isOver: isFinishedTest,\n        getTimerInfo: handleGetTimerInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DrivingTestModule, {\n        onChangeTest: handleChangeTest,\n        onFinishTest: handleFinishTest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(TestPage, \"KZsgfqRQDAz5qGoRi7Uss6EwBEU=\");\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useState","DrivingTestModule","CountDown","ResultPage","TestPage","timerInfo","setTimerInfo","isOver","finishTime","resultInfo","setResultInfo","errors","correctAnswers","totalQuestionsNumbers","isFinishedTest","setIsFinishedTest","handleGetTimerInfo","info","handleFinishTest","handleChangeTest","handleResetTest"],"sources":["C:/Python/jacshyjolFB/front/src/pages/TestPage/TestPage.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport DrivingTestModule from \"../../modules/driving-test/TestingWindow\";\r\nimport CountDown from \"../../components/timer\";\r\nimport ResultPage from \"../ResultPage/ResultPage\";\r\n\r\nconst TestPage = () => {\r\n  const [timerInfo, setTimerInfo] = useState({\r\n    isOver: false,\r\n    finishTime: ''\r\n  })\r\n  const [resultInfo, setResultInfo] = useState({\r\n    errors: 0,\r\n    correctAnswers: 0,\r\n    totalQuestionsNumbers: 0\r\n  })\r\n\r\n  const [isFinishedTest, setIsFinishedTest] = useState(false)\r\n\r\n  const handleGetTimerInfo = (info) => {\r\n    setTimerInfo(info)\r\n  }\r\n  const handleFinishTest = (resultInfo) => {\r\n    setResultInfo(resultInfo)\r\n    setIsFinishedTest(true)\r\n  }\r\n  const handleChangeTest = (resultInfo) => {\r\n    setResultInfo(resultInfo)\r\n  }\r\n  const handleResetTest = () => {\r\n    setIsFinishedTest(false)\r\n    setTimerInfo({\r\n      isOver: false,\r\n      finishTime: ''\r\n    })\r\n    setResultInfo({\r\n      errors: 0,\r\n      correctAnswers: 0,\r\n      totalQuestionsNumbers: 0\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {timerInfo.isOver ? (\r\n        <ResultPage\r\n          onResetTest={handleResetTest}\r\n          countError={resultInfo.errors}\r\n          correctAnswers={resultInfo.correctAnswers}\r\n          totalQuestionsNumber={resultInfo.totalQuestionsNumbers}\r\n          finishTime={timerInfo.finishTime}\r\n          timerInfo={timerInfo}\r\n        />\r\n      ) : (\r\n        <>\r\n          <CountDown isOver={isFinishedTest} getTimerInfo={handleGetTimerInfo}/>\r\n          <DrivingTestModule onChangeTest={handleChangeTest} onFinishTest={handleFinishTest}/>\r\n        </>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TestPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,iBAAiB,MAAM,0CAA0C;AACxE,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,0BAA0B;AAAC;AAAA;AAElD,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC;IACzCO,MAAM,EAAE,KAAK;IACbC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC;IAC3CW,MAAM,EAAE,CAAC;IACTC,cAAc,EAAE,CAAC;IACjBC,qBAAqB,EAAE;EACzB,CAAC,CAAC;EAEF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMgB,kBAAkB,GAAIC,IAAI,IAAK;IACnCX,YAAY,CAACW,IAAI,CAAC;EACpB,CAAC;EACD,MAAMC,gBAAgB,GAAIT,UAAU,IAAK;IACvCC,aAAa,CAACD,UAAU,CAAC;IACzBM,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EACD,MAAMI,gBAAgB,GAAIV,UAAU,IAAK;IACvCC,aAAa,CAACD,UAAU,CAAC;EAC3B,CAAC;EACD,MAAMW,eAAe,GAAG,MAAM;IAC5BL,iBAAiB,CAAC,KAAK,CAAC;IACxBT,YAAY,CAAC;MACXC,MAAM,EAAE,KAAK;MACbC,UAAU,EAAE;IACd,CAAC,CAAC;IACFE,aAAa,CAAC;MACZC,MAAM,EAAE,CAAC;MACTC,cAAc,EAAE,CAAC;MACjBC,qBAAqB,EAAE;IACzB,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAA,UACGR,SAAS,CAACE,MAAM,gBACf,QAAC,UAAU;MACT,WAAW,EAAEa,eAAgB;MAC7B,UAAU,EAAEX,UAAU,CAACE,MAAO;MAC9B,cAAc,EAAEF,UAAU,CAACG,cAAe;MAC1C,oBAAoB,EAAEH,UAAU,CAACI,qBAAsB;MACvD,UAAU,EAAER,SAAS,CAACG,UAAW;MACjC,SAAS,EAAEH;IAAU;MAAA;MAAA;MAAA;IAAA,QACrB,gBAEF;MAAA,wBACE,QAAC,SAAS;QAAC,MAAM,EAAES,cAAe;QAAC,YAAY,EAAEE;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAE,eACtE,QAAC,iBAAiB;QAAC,YAAY,EAAEG,gBAAiB;QAAC,YAAY,EAAED;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;EAErF,iBACF;AAEP,CAAC;AAAC,GAvDId,QAAQ;AAAA,KAARA,QAAQ;AAyDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}