{"ast":null,"code":"var _jsxFileName = \"C:\\\\Python\\\\jacshyjolFB\\\\front\\\\src\\\\modules\\\\driving-test\\\\TestingWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport QuestionItem from \"./questions/QuestionItem\";\nimport CircularIndeterminate from \"../../components/loader\";\nimport './TestingWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrivingTestModule = props => {\n  _s();\n  const [activeQuestionNumber, setActiveQuestionNumber] = useState(1);\n  const [question, setQuestion] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isShowDescription, setIsShowDescription] = useState(false);\n  const [errors, setErrors] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [showAnswer, setShowAnswer] = useState('');\n  const [answerColor, setAnswerColor] = useState('');\n  const getQuestions = async () => {\n    const response = await fetch('http://127.0.0.1:8000/api/question/');\n    return await response.json();\n  };\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const data = await getQuestions();\n        setQuestion(data);\n      } catch (e) {\n        alert('Сервер недоступен или отключен');\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  // Эта функция для кнопки \"Отправить\".\n  const handleGoNextQuestion = () => {\n    props.onChangeTest({\n      errors,\n      correctAnswers,\n      totalQuestionsNumbers: question.length\n    });\n    if (errors > 2) {\n      props.onFinishTest({\n        errors,\n        correctAnswers,\n        totalQuestionsNumbers: question.length\n      });\n      return;\n    }\n    setActiveQuestionNumber(prev => prev + 1);\n    setIsShowDescription(false);\n    setAnswerColor('');\n    setShowAnswer('');\n  };\n  const handleCheckAnswer = answer => {\n    if (!answer) {\n      setErrors(prev => prev + 1);\n      setShowAnswer('Ответ неверный');\n      setAnswerColor('#BB1919');\n    } else {\n      setCorrectAnswers(prev => prev + 1);\n      setShowAnswer('Ответ верный');\n      setAnswerColor('#11AE04');\n    }\n    setIsShowDescription(true);\n  };\n  const handleFinishTest = () => {\n    props.onFinishTest({\n      errors,\n      correctAnswers,\n      totalQuestionsNumbers: question.length\n    });\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(CircularIndeterminate, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: question.map((elem, idx) => {\n      if (activeQuestionNumber !== elem.questionNamber) {\n        return;\n      }\n      return /*#__PURE__*/_jsxDEV(QuestionItem, {\n        totalQuestionsNumber: question.length,\n        data: elem,\n        onGoNextQuestion: handleGoNextQuestion,\n        activeQuestionNumber: activeQuestionNumber,\n        isShowDescription: isShowDescription,\n        onCheckAnswer: handleCheckAnswer,\n        errors: errors,\n        onFinishTest: handleFinishTest,\n        showAnswer: showAnswer,\n        answerColor: answerColor\n      }, `question_${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(DrivingTestModule, \"JhUcv+/y1ad0sdLGl4gbW02T4Rk=\");\n_c = DrivingTestModule;\nexport default DrivingTestModule;\nvar _c;\n$RefreshReg$(_c, \"DrivingTestModule\");","map":{"version":3,"names":["React","useEffect","useState","QuestionItem","CircularIndeterminate","DrivingTestModule","props","activeQuestionNumber","setActiveQuestionNumber","question","setQuestion","isLoading","setIsLoading","isShowDescription","setIsShowDescription","errors","setErrors","correctAnswers","setCorrectAnswers","showAnswer","setShowAnswer","answerColor","setAnswerColor","getQuestions","response","fetch","json","data","e","alert","handleGoNextQuestion","onChangeTest","totalQuestionsNumbers","length","onFinishTest","prev","handleCheckAnswer","answer","handleFinishTest","map","elem","idx","questionNamber"],"sources":["C:/Python/jacshyjolFB/front/src/modules/driving-test/TestingWindow.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport QuestionItem from \"./questions/QuestionItem\";\r\nimport CircularIndeterminate from \"../../components/loader\";\r\nimport './TestingWindow.css';\r\n\r\nconst DrivingTestModule = (props) => {\r\n\r\n  const [activeQuestionNumber, setActiveQuestionNumber] = useState(1)\r\n  const [question, setQuestion] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isShowDescription, setIsShowDescription] = useState(false)\r\n  const [errors, setErrors] = useState(0)\r\n  const [correctAnswers, setCorrectAnswers] = useState(0)\r\n  const [showAnswer, setShowAnswer] = useState('')\r\n  const [answerColor, setAnswerColor] = useState('')\r\n\r\n  const getQuestions = async () => {\r\n    const response = await fetch('http://127.0.0.1:8000/api/question/');\r\n    return await response.json();\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true)\r\n      try {\r\n        const data  = await getQuestions()\r\n        setQuestion(data)\r\n      } catch (e) {\r\n         alert('Сервер недоступен или отключен')\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    })()\r\n  }, []);\r\n\r\n\r\n  // Эта функция для кнопки \"Отправить\".\r\n  const handleGoNextQuestion = () => {\r\n    props.onChangeTest({\r\n      errors,\r\n      correctAnswers,\r\n      totalQuestionsNumbers: question.length\r\n    })\r\n    if (errors > 2) {\r\n      props.onFinishTest({\r\n        errors,\r\n        correctAnswers,\r\n        totalQuestionsNumbers: question.length\r\n      })\r\n      return\r\n    }\r\n    setActiveQuestionNumber(prev => prev + 1)\r\n    setIsShowDescription(false)\r\n    setAnswerColor('')\r\n    setShowAnswer('')\r\n  }\r\n\r\n  const handleCheckAnswer = (answer) => {\r\n    if (!answer) {\r\n      setErrors(prev => prev + 1)\r\n      setShowAnswer('Ответ неверный')\r\n      setAnswerColor('#BB1919')\r\n    } else {\r\n      setCorrectAnswers(prev => prev + 1)\r\n      setShowAnswer('Ответ верный')\r\n      setAnswerColor('#11AE04')\r\n    }\r\n    setIsShowDescription(true)\r\n  }\r\n\r\n  const handleFinishTest = () => {\r\n    props.onFinishTest({\r\n      errors,\r\n      correctAnswers,\r\n      totalQuestionsNumbers: question.length\r\n    })\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <CircularIndeterminate />\r\n  }\r\n  return (\r\n    <div>\r\n      {question.map((elem, idx) => {\r\n        if (activeQuestionNumber !== elem.questionNamber) {\r\n          return\r\n        }\r\n        return (\r\n          <QuestionItem\r\n            key={`question_${idx}`}\r\n            totalQuestionsNumber={question.length}\r\n            data={elem}\r\n            onGoNextQuestion={handleGoNextQuestion}\r\n            activeQuestionNumber={activeQuestionNumber}\r\n            isShowDescription={isShowDescription}\r\n            onCheckAnswer={handleCheckAnswer}\r\n            errors={errors}\r\n            onFinishTest={handleFinishTest}\r\n            showAnswer={showAnswer}\r\n            answerColor={answerColor}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrivingTestModule;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}